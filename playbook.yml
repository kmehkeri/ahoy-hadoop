---
- hosts: all
  become: yes

  handlers:
    - name: Restart Network Manager
      service: name=NetworkManager state=restarted

    - name: Restart network
      service: name=network state=restarted

  tasks:
    - name: Copy hosts file
      copy: src=hosts dest=/etc/hosts
      notify:
        - Restart Network Manager
        - Restart network

    - name: Add Cloudera repository
      yum_repository:
        name: cloudera-cdh5
        description: Cloudera's Distribution for Hadoop, Version 5
        baseurl: https://archive.cloudera.com/cdh5/redhat/7/x86_64/cdh/5/
        gpgkey: https://archive.cloudera.com/cdh5/redhat/7/x86_64/cdh/RPM-GPG-KEY-cloudera
        gpgcheck: yes

    - name: Install Packages
      yum: name={{item}} state=present
      with_items:
        - vim
        - java
        - zookeeper
        - hadoop-client

    - name: Configure variables for Java
      copy: src=java.sh dest=/etc/profile.d

    - name: Configure Hadoop
      copy: src=hadoop/ dest=/etc/hadoop/conf

    - name: Prepare data directory
      file: path=/data state=directory

    - name: Manage .bashrc
      blockinfile:
        dest: ~/.bashrc
        block: |
          PS1='\[\e[0;36m\][\A] \[\e[1;31m\]\u@\h \[\e[1;34m\]\w \$ \[\e[0m\]'


- hosts: zookeepers
  become: yes
  
  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
       - zookeeper-server

    - name: Configure Zookeeper
      copy: src=zookeeper/zoo.cfg dest=/etc/zookeeper/conf

    - name: Create Zookeeper data directory
      file: path=/data/zookeeper state=directory owner=zookeeper group=zookeeper mode=0700

    - name: Create Zookeeper id
      shell: service zookeeper-server init --myid=$(echo -n $(hostname) | tail -c 1)  creates=/data/zookeeper/myid

    - name: Start Zookeeper
      service: name=zookeeper-server enabled=yes state=started


- hosts: hdfs_namenodes
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hadoop-hdfs-namenode

    - name: Prepare namenode directory
      file: path=/data/namenode state=directory owner=hdfs group=hdfs

    - name: Format HDFS
      shell: hdfs namenode -format  creates=/data/namenode/current
      become: yes
      become_user: hdfs

    - name: Start Namenode
      service: name=hadoop-hdfs-namenode enabled=yes state=started

    - name: Create /tmp directory in HDFS
      command: hdfs dfs -mkdir /tmp
      become: yes
      become_user: hdfs
      register: create_tmp
      failed_when: "create_tmp.rc != 0 and 'File exists' not in create_tmp.stderr"
      changed_when: "create_tmp.rc == 0 and 'File exists' not in create_tmp.stderr"

    - name: Set permissions on /tmp
      command: hdfs dfs -chmod 1777 /tmp
      become: yes
      become_user: hdfs
      when: create_tmp.changed


- hosts: hdfs_secondary_namenodes
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hadoop-hdfs-secondarynamenode

    - name: Prepare namenode directory
      file: path=/data/secondarynamenode state=directory owner=hdfs group=hdfs mode=0700

    - name: Start Secondary Namenode
      service: name=hadoop-hdfs-secondarynamenode enabled=yes state=started


- hosts: hdfs_datanodes
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hadoop-hdfs-datanode

    - name: Prepare datanode directory
      file: path=/data/datanode state=directory owner=hdfs group=hdfs mode=0700

    - name: Start Datanode
      service: name=hadoop-hdfs-datanode enabled=yes state=started


- hosts: yarn_resource_managers
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hadoop-yarn-resourcemanager

    - name: Start Resource Manager
      service: name=hadoop-yarn-resourcemanager enabled=yes state=started


- hosts: yarn_nodemanagers
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hadoop-yarn-nodemanager
        - hadoop-mapreduce

    - name: Start Node Manager
      service: name=hadoop-yarn-nodemanager enabled=yes state=started


- hosts: mapred_job_history_servers
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hadoop-mapreduce-historyserver

    - name: Start Job History Server
      service: name=hadoop-mapreduce-historyserver enabled=yes state=started


- hosts: hbase_masters
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hbase-master

    - name: Configure HBase
      copy: src=hbase/ dest=/etc/hbase/conf

    - name: Create /hbase directory in HDFS
      command: hdfs dfs -mkdir /hbase
      become: yes
      become_user: hdfs
      register: create_hbase_dir
      failed_when: "create_hbase_dir.rc != 0 and 'File exists' not in create_hbase_dir.stderr"
      changed_when: "create_hbase_dir.rc == 0 and 'File exists' not in create_hbase_dir.stderr"

    - name: Set owner for /hbase
      command: hdfs dfs -chown hbase /hbase
      become: yes
      become_user: hdfs
      when: create_hbase_dir.changed

    - name: Start HBase Master
      service: name=hbase-master enabled=yes state=started


- hosts: hbase_regionservers
  become: yes

  tasks:
    - name: Install packages
      yum: name={{item}} state=present
      with_items:
        - hbase-regionserver

    - name: Configure HBase
      copy: src=hbase/ dest=/etc/hbase/conf

    - name: Start HBase Regionserver
      service: name=hbase-regionserver enabled=yes state=started


- hosts: all

  tasks:
    - name: Have vagrant in hadoop group
      user: name=vagrant groups=hadoop append=yes
      become: yes

    - name: Manage .bashrc
      blockinfile:
        dest: ~/.bashrc
        block: |
          PS1='\[\e[0;36m\][\A] \[\e[1;35m\]\u@\h \[\e[1;34m\]\w \$ \[\e[0m\]'

